#! /usr/bin/env node

var chalk = require('chalk'),
	argv = require('yargs')
	optionsProvider = require('../src/optionsProvider');

argv = argv.usage('Usage: frau-local-appresolver --appclass|-c [--configfile|-f] [--hostname|-h] [--port|-p] [--dist|-d] [--baseRoute|-b]')
	.example('frau-local-appresolver -c urn:d2l:fra:class:some-app -f appconfig.json -h acme.com -p 3000 -d dist')
	.alias('c', 'appclass')
	.alias('f', 'configfile')
	.alias('h', 'hostname')
	.alias('p', 'port')
	.alias('d', 'dist')
	.alias('b', 'baseRoute')
	.argv;

var appResolver = require('../src/appresolver');

var opts = optionsProvider.getOptions(argv);

appResolver = appResolver(opts.appClass, opts);

appResolver.host()
	.then(function() {
		console.log(chalk.green('Hosting...\n'));
		console.log(
			chalk.grey(
				'   app-class: ' + opts.appClass + '\n' +
				'   app-config: ' + appResolver.getConfigUrl() + '\n'
			)
		);
	}).catch(function(err) {
		if (err && err.code === 'EADDRINUSE') {
			console.log(chalk.red('Error: ' + err.code + '. Port is in use.\n'));
		} else {
			console.log(chalk.red('Error: ' + err.code + '.\n'));
		}
	});
